{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport dataService from \"./dataService\";\nconst initialState = {\n  notlar: [],\n  isHata: false,\n  isBasari: false,\n  isYkleniyor: false,\n  mesaj: \"\"\n};\nexport const notSlice = createSlice({\n  name: \"notlar\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  }\n});\nexport const notOlustur = createAsyncThunk(\"notlar/create\", async (notData, thunkAPI) => {\n  try {\n    const token = thunkAPI;\n  } catch (error) {\n    const mesaj = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(mesaj);\n  }\n});\nexport const {\n  reset\n} = notSlice.actions;\nexport default notSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","thunk","dataService","initialState","notlar","isHata","isBasari","isYkleniyor","mesaj","notSlice","name","reducers","reset","state","notOlustur","notData","thunkAPI","token","error","response","data","message","toString","rejectWithValue","actions","reducer"],"sources":["/Users/halilhaninan/Desktop/mernstack/frontend/src/features/data/dataSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport dataService from \"./dataService\";\n\nconst initialState = {\n  notlar: [],\n  isHata: false,\n  isBasari: false,\n  isYkleniyor: false,\n  mesaj: \"\",\n};\n\nexport const notSlice = createSlice({\n  name: \"notlar\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n});\n\nexport const notOlustur = createAsyncThunk(\n  \"notlar/create\",\n  async (notData, thunkAPI) => {\n    try {\n        const token = thunkAPI\n\n\n    } catch (error) {\n      const mesaj =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      return thunkAPI.rejectWithValue(mesaj);\n    }\n  }\n);\n\nexport const { reset } = notSlice.actions;\nexport default notSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EADW;EAEnBC,MAAM,EAAE,KAFW;EAGnBC,QAAQ,EAAE,KAHS;EAInBC,WAAW,EAAE,KAJM;EAKnBC,KAAK,EAAE;AALY,CAArB;AAQA,OAAO,MAAMC,QAAQ,GAAGV,WAAW,CAAC;EAClCW,IAAI,EAAE,QAD4B;EAElCP,YAFkC;EAGlCQ,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAWV;EADV;AAHwB,CAAD,CAA5B;AAQP,OAAO,MAAMW,UAAU,GAAGd,gBAAgB,CACxC,eADwC,EAExC,OAAOe,OAAP,EAAgBC,QAAhB,KAA6B;EAC3B,IAAI;IACA,MAAMC,KAAK,GAAGD,QAAd;EAGH,CAJD,CAIE,OAAOE,KAAP,EAAc;IACd,MAAMV,KAAK,GACRU,KAAK,CAACC,QAAN,IACCD,KAAK,CAACC,QAAN,CAAeC,IADhB,IAECF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAFtB,IAGAH,KAAK,CAACG,OAHN,IAIAH,KAAK,CAACI,QAAN,EALF;IAOA,OAAON,QAAQ,CAACO,eAAT,CAAyBf,KAAzB,CAAP;EACD;AACF,CAjBuC,CAAnC;AAoBP,OAAO,MAAM;EAAEI;AAAF,IAAYH,QAAQ,CAACe,OAA3B;AACP,eAAef,QAAQ,CAACgB,OAAxB"},"metadata":{},"sourceType":"module"}